-------------------- Config ssh in server -------------------
$ ssh-keygen
$ ssh-copy-id server-user@[server-ip]
$ ssh server-user@[server-ip] 
$ sudo nano /etc/ssh/sshd_config 
	    > PasswordAuthentication no
$ sudo systemctl restart ssh
-------------------- Install certbot -------------------
$ apt-get update
$ sudo apt-get install certbot
> Set two DNS A record @ and www (in server provider like arvancloud.ir), declareing mrkhalili.ir and www.mrkhalili.ir domain name respectively
$ sudo certbot certonly --standalone -d mrkhalili.ir -d www.mrkhalili.ir
$ sudo cp /etc/letsencrypt/live/mrkhalili.ir/fullchain.pem /srv/gitlab/config/ssl/mrkhalili.ir.crt
$ sudo cp /etc/letsencrypt/live/mrkhalili.ir/privkey.pem /srv/gitlab/config/ssl/mrkhalili.ir.key 

-------------------- Renewal certification in the certbot -------------------
$ crontab -e
> @monthly /usr/bin/certbot renew --quiet
> @monthly cp /etc/letsencrypt/live/mrkhalili.ir/fullchain.pem /srv/gitlab/config/ssl/mrkhalili.ir.crt
> @monthly cp /etc/letsencrypt/live/mrkhalili.ir/privkey.pem /srv/gitlab/config/ssl/mrkhalili.ir.key 
$ sudo service cron reload

----------------- Set the Shekan's Ip in the netplan for installing docker : addresses [178.22.122.100, 185.51.200.2]----------

$ sudo nano /etc/netplan/50-cloud-init.yaml
# This file is generated from information provided by the datasource.  Changes
# to it will not persist across an instance reboot.  To disable cloud-init's
# network configuration capabilities, write a file
# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:
# network: {config: disabled}

> network:
    version: 2
    ethernets:
        eth0:
            dhcp4: true 
            match:
                macaddress: fa:16:3e:9f:ab:14
            nameservers:
                addresses: [178.22.122.100, 185.51.200.2]
            mtu: 1500
            set-name: eth0

$ sudo netplan try 
$ sudo netplan apply 

----------------------- Install Docker --------------------
#Docs
----------------------- Docker PostInstalation --------------------
#Docs
----------------------- Change docker registery mirror --------------------

$ sudo nano /etc/docker/daemon.json
> {
    "insecure-registries" : ["https://docker.arvancloud.ir"],
    "registry-mirrors": ["https://docker.arvancloud.ir"]
  }
$ sudo systemctl restart docker

--------------- change server ssh port ----------------
$ sudo nano /etc/ssh/sshd_config 
> port 3022
$ sudo systemctl restart ssh
------------------ Install gitlab ---------------------- 

$ sudo mkdir -p /srv/gitlab

$ export GITLAB_HOME=/srv/gitlab

/srv/gitlab$ sudo mkdir logs
/srv/gitlab$ sudo mkdir data
/srv/gitlab$ sudo mkdir config
/srv/gitlab$ sudo mkdir backup

# Create docker compose file
docker compose:

> version: '3.6'
services:
  gitlab:
    image: gitlab/gitlab-ce:16.8.3-ce.0
    container_name: gitlab
    restart: always
    hostname: 'mrkhalili.ir'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Add any other gitlab.rb configuration here, each on its own line
        external_url 'https://mrkhalili.ir'

        # Change the initial default admin password
        gitlab_rails['initial_root_password'] = "Mkh/1373"
        gitlab_rails['display_initial_root_password'] = "false"
        gitlab_rails['store_initial_root_password'] = "false"

        # Configure a failed authentication ban
        gitlab_rails['rack_attack_git_basic_auth'] = {
          'enabled' => false,
          'ip_whitelist' => ["127.0.0.1"],
          'maxretry' => 10,
          'findtime' => 60,
          'bantime' => 3600
        }

        # Disable unuse services
        prometheus['enable'] = false
        grafana['enable'] = false
        alertmanager['enable'] = false
        pgbouncer_exporter['enable'] = false
        puma['exporter_enabled'] = false
        gitlab_exporter['enable'] = false
        node_exporter['enable'] = false
        sidekiq['metrics_enabled'] = false
        redis_exporter['enable'] = false
        postgres_exporter['enable'] = false

        # gitlab backup config
        gitlab_rails['manage_backup_path'] = true
        gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"
        gitlab_rails['backup_archive_permissions'] = 0644
        gitlab_rails['backup_keep_time'] = 604800
        gitlab_rails['env'] = {"SKIP" => "registry"}

    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
      - '$GITLAB_HOME/backup:/var/opt/gitlab/backups'
    shm_size: '256m'

$ docker compose up -d

------------------ Setup Docker Container Registry For Gitlab ----------------------
------------------ Get certificate for sub domain ----------------------
# Create a new DNS record for the sub domain (registery.mrkhalili.ir, www.registery.mrkhalili.ir)
# $ sudo certbot delete --standalone -d *.mrkhalili.ir
$ sudo certbot certonly --standalone -d registry.mrkhalili.ir -d www.registry.mrkhalili.ir
# $ sudo certbot certonly --standalone -d "mrkhalili.ir,www.mrkhalili.ir,registry.mrkhalili.ir,www.registry.mrkhalili.ir" -i installer --keep
$ sudo cp /etc/letsencrypt/live/registry.mrkhalili.ir/fullchain.pem /srv/gitlab/config/ssl/registry.mrkhalili.ir.crt
$ sudo cp /etc/letsencrypt/live/registry.mrkhalili.ir/privkey.pem /srv/gitlab/config/ssl/registry.mrkhalili.ir.key
$ sudo chmod 600 /etc/gitlab/ssl/registry.mrkhalili.ir.*

------------------ Config gitlab.rb for registry ----------------------
$ sudo nano /srv/gitlab/config/gitlab.rb
> registry_external_url 'https://registry.mrkhalili.ir'
> gitlab_rails['registry_path'] = "/var/opt/gitlab/gitlab-rails/shared/registry"
> registry['enable'] = true
> registry_nginx['enable'] = true
> gitlab_rails['lfs_enabled'] = true
> registry_nginx['ssl_certificate'] = "/etc/gitlab/ssl/registry.mrkhalili.ir.crt"
> registry_nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/registry.mrkhalili.ir.key"
> nginx['ssl_certificate'] = "/etc/gitlab/ssl/mrkhalili.ir.crt"
> nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/mrkhalili.ir.key"
$ docker exec -it gitlab gitlab-ctl reconfigure
# Enable container registry for each project
# setting > general > Visibility, project features, permissions > Container registry
# Then you can see container registry in Deploy menu
